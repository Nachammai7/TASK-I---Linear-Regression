Author : Nachammai CM

Predict the percentage of a student based on the no. of study hrs. This is a Simple Linear Regression task as it involves just 2 variables.
What will be the predicted score if a student studies for 9.25 hrs/day?

#Importing the required libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error

#Reading Data
data= pd.read_csv("https://raw.githubusercontent.com/AdiPersonalWorks/Random/master/student_scores%20-%20student_scores.csv")
data.head(10)

#Check if there is any null value in the dataset
data.isnull== True

sns.set_style('darkgrid')
sns.scatterplot(y= data['Scores'], x= data['Hours'])
plt.title('Marks Vs Study Hours',size=20)
plt.ylabel('Marks Percentage', size=12)
plt.xlabel('Hours Studied', size=12)
plt.show()

sns.regplot(x= data["Hours"], y= data["Scores"])
plt.title('Regression Plot',size=20)
plt.ylabel('Marks Percentage', size=12)
plt.xlabel('Hours Studied', size=12)
plt.show()
print(data.corr())

Training the data model

1) Splitting the data
# Defining X and y from the Data
X = data.iloc[:, :-1].values  
y = data.iloc[:, 1].values

# Spliting the Data in two
train_X, val_X, train_y, val_y = train_test_split(X, y, random_state = 0)

2) Fitting the data into the model
regression = LinearRegression()
regression.fit(train_X, train_y)
print("Model Trained")

pred_y = regression.predict(val_X)
prediction = pd.DataFrame({'Hours': [i[0] for i in val_X], 'Predicted Marks': [k for k in pred_y]})
prediction

Comparing the predicted marks with the actual marks

compare_scores = pd.DataFrame({'Actual Marks': val_y, 'Predicted Marks': pred_y})
compare_scores

Visually comparing the predicted marks with actual marks
plt.scatter(x=val_X, y=val_y, color='red')
plt.plot(val_X, pred_y, color='yellow')
plt.title('Actual vs Predicted', size=20)
plt.ylabel('Marks Percentage', size=12)
plt.xlabel('Hours Studied', size=12)
plt.show()

Evaluating the error
# Calculating the accuracy of the model
print('Mean absolute error: ',mean_absolute_error(val_y,pred_y))

What will be the predicted score of a student if he/she studies for 9.25hrs/day?
hours = [9.25]
answer = regression.predict([hours])
print("Score = {}".format(round(answer[0],3)))
